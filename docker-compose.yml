version: '2'

services:

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
#    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"

  dockergen:
    image: jwilder/docker-gen:0.7.3
    container_name: nginx-proxy-gen
#    restart: always
    depends_on:
      - nginx
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    restart: always
    depends_on:
      - nginx
      - dockergen
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: nginx-proxy-gen
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro

#  webmail:
#    image: nginx:1.13.1
#    restart: always
#    container_name: webmail
#    depends_on:
#      - letsencrypt
#    environment:
#      - VIRTUAL_HOST=${MAIL_DOMAIN}
#      - LETSENCRYPT_HOST=${MAIL_DOMAIN}
#      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
#      - LETSENCRYPT_TEST=false

#  mail:
#    image: tvial/docker-mailserver:latest
#    restart: always
#    hostname: mail
#    domainname: ***REMOVED***.de
#    container_name: mail
#    depends_on:
#      - letsencrypt
#    ports:
#      - "25:25"
#      - "143:143"
#      - "587:587"
#      - "993:993"
#    volumes:
#      - /data/mail/data:/var/mail
#      - /data/mail/state:/var/mail-state
#      - ./mail/:/tmp/docker-mailserver/
#      - certs:/etc/letsencrypt/live/
#    environment:
#      - ENABLE_SPAMASSASSIN=1
#      - ENABLE_CLAMAV=1
#      - ENABLE_FAIL2BAN=0
#      - ENABLE_POSTGREY=0
#      - ENABLE_FETCHMAIL=1
#      - ONE_DIR=1
#      - DMS_DEBUG=0
#      - SSL_TYPE=letsencrypt
#    cap_add:
#      - NET_ADMIN
#      - SYS_PTRACE

  mariadb:
    image: mariadb:10.5
#    restart: always
    container_name: mariadb-***REMOVED***
    ports:
      - 10.7.0.1:3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
#     - MYSQL_DATABASE=${DB_NAME}
#     - MYSQL_USER=${DB_USERNAME}
#     - MYSQL_PASSWORD=${DB_PASSWORD}
#     - SBFSPOT_USERNAME=${DB_SBFSPOT_USERNAME}
#     - SBFSPOT_PASSWORD=${DB_SBFSPOT_PASSWORD}
#     - VOLKSZ_USERNAME=${DB_VOLKSZ_USERNAME}
#     - VOLKSZ_PASSWORD=${DB_VOLKSZ_PASSWORD}
    volumes:
      - /data/mysql:/var/lib/mysql
      - /data/mysql-backup:/var/lib/backup
      - ./mariadb-config:/etc/mysql/conf.d

  redis:
    image: redis
    restart: always
    container_name: redis

  nextcloud-app:
    build: ./nextcloud-app
#    restart: always
    container_name: nextcloud-app
    volumes:
      - nextcloud:/var/www/html
      - /data/nextcloud/data:/var/www/html/data
      - /data/nextcloud/config:/var/www/html/config
      - /data/nextcloud/custom_apps:/var/www/html/custom_apps
      - /data/nextcloud/themes:/var/www/html/themes
    environment:
      - MYSQL_HOST=mariadb
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    depends_on:
      - mariadb
      - redis
      - letsencrypt

  nextcloud-web:
    build: ./nextcloud-web
#    restart: always
    container_name: nextcloud-web
    expose:
      - 443
    volumes:
      - nextcloud:/var/www/html:ro
      - /data/nextcloud/data:/var/www/html/data:ro
      - /data/nextcloud/config:/var/www/html/config:ro
      - /data/nextcloud/custom_apps:/var/www/html/custom_apps:ro
      - /data/nextcloud/themes:/var/www/html/themes:ro
    depends_on:
      - nextcloud-app
    environment:
      - VIRTUAL_HOST=${OC_DOMAIN}
      - LETSENCRYPT_HOST=${OC_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
      - LETSENCRYPT_TEST=false

  nextcloud-cron:
    build: ./nextcloud-app
#    restart: always
    container_name: nextcloud-cron
    volumes:
      - nextcloud:/var/www/html
      - /data/nextcloud/data:/var/www/html/data
      - /data/nextcloud/config:/var/www/html/config
      - /data/nextcloud/custom_apps:/var/www/html/custom_apps
      - /data/nextcloud/themes:/var/www/html/themes
    entrypoint: /cron.sh
    depends_on:
      - mariadb
      - redis
      
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    restart: always
#    ports:
#      - "3000:3000"
#    volumes:
#      - /data/grafana:/var/lib/grafana
#    depends_on:
#      - letsencrypt
#    environment:
#      - VIRTUAL_HOST=${GRAFANA_DOMAIN}
#      - LETSENCRYPT_HOST=${GRAFANA_DOMAIN}
#      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
#      - LETSENCRYPT_TEST=false
#      - GF_SMTP_ENABLED=true
#      - GF_SMTP_HOST=mail.***REMOVED***.de:587
#      - GF_SMTP_USER=andreas@***REMOVED***.de
#      - GF_SMTP_PASSWORD=sijqhHpwQA4ihV54
#      - GF_SMTP_FROM_ADDRESS=admin@***REMOVED***.de
#      - GF_SMTP_FROM_NAME=Admin
#      - GF_SERVER_ROOT_URL=https://${GRAFANA_DOMAIN}

#  influxdb:
#    image: influxdb:latest
#    container_name: influxdb
#    ports:
#      - "10.7.0.1:8086:8086"
#      - "10.7.0.1:25826:25826"
#    env_file:
#      - '.env.influxdb'
#    volumes:
#      - /data/influxdb:/var/lib/influxdb
#      - ./influx/influxdb.conf:/etc/influxdb/influxdb.conf
#      - ./influx/types.db:/usr/share/collectd/types.db:ro

  bitwardenrs:
    image: bitwardenrs/server:latest
    container_name: bitwardenrs
    volumes:
      - /data/bitwarden:/data
    expose:
      - 80
    depends_on:
      - letsencrypt
      - mariadb
    environment:
      - VIRTUAL_HOST=${BITWARDEN_DOMAIN}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${BITWARDEN_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
      - LETSENCRYPT_TEST=false
      - ADMIN_TOKEN=${BITWARDEN_ADMIN_TOKEN}
      - WEBSOCKET_ENABLED=true
      - DATABASE_URL=${BITWARDEN_DATABASE_URL}

#  yacy-search-server:
#    image: yacy/yacy_search_server:latest
#    container_name: yacy-search-server
#    volumes:
#      - /data/yacy_search_server:/opt/yacy_search_server/DATA
#    ports:
#      - 8090:8090
#      - 8443:8443
#    depends_on:
#      - letsencrypt
#    environment:
#      - VIRTUAL_HOST=${YACY_DOMAIN}
#      - VIRTUAL_PORT=8090
#      - LETSENCRYPT_HOST=${YACY_DOMAIN}
#      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
#      - LETSENCRYPT_TEST=false

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    volumes:
      - ./searxng:/etc/searxng
    expose:
      - 8080
    depends_on:
      - letsencrypt
    environment:
      - VIRTUAL_HOST=${SEARXNG_DOMAIN}
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=${SEARXNG_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
      - LETSENCRYPT_TEST=false
      - BASE_URL=https://${SEARXNG_DOMAIN}

volumes:
  conf:
  vhost:
  html:
  certs:
#  files:
#  mysql:
#  backup:
#  redis:
#  maildata:
#  mailstate:
  nextcloud:
#  sbfspot:
#  grafana-volume:
#  influxdb-volume:

# Do not forget to 'docker network create nginx-proxy' before launch, and to add '--network nginx-proxy' to proxied containers.
#networks:
#  default:
#    external:
#      name: nginx-proxy

