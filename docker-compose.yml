version: '2'

services:

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"

  dockergen:
    image: jwilder/docker-gen:0.7.3
    container_name: nginx-proxy-gen
    restart: always
    depends_on:
      - nginx
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    restart: always
    depends_on:
      - nginx
      - dockergen
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: nginx-proxy-gen
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro

  webmail:
    image: nginx:1.13.1
    restart: always
    container_name: webmail
    depends_on:
      - letsencrypt
    environment:
      - VIRTUAL_HOST=${MAIL_DOMAIN}
      - LETSENCRYPT_HOST=${MAIL_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
      - LETSENCRYPT_TEST=false

  mail:
    image: tvial/docker-mailserver:latest
    restart: always
    hostname: mail
    domainname: ***REMOVED***.de
    container_name: mail
    depends_on:
      - letsencrypt
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "993:993"
    volumes:
      - maildata:/var/mail
      - mailstate:/var/mail-state
      - ./config/:/tmp/docker-mailserver/
      - certs:/etc/letsencrypt/live/
    environment:
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=0
      - ENABLE_POSTGREY=1
      - ENABLE_FETCHMAIL=1
      - ONE_DIR=1
      - DMS_DEBUG=0
      - SSL_TYPE=letsencrypt
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE

  mariadb:
    build: ./db
    image: mariadb-***REMOVED***:latest
    restart: always
    container_name: mariadb-***REMOVED***
    ports:
      - 10.8.0.2:3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - SBFSPOT_USERNAME=${DB_SBFSPOT_USERNAME}
      - SBFSPOT_PASSWORD=${DB_SBFSPOT_PASSWORD}
      - VOLKSZ_USERNAME=${DB_VOLKSZ_USERNAME}
      - VOLKSZ_PASSWORD=${DB_VOLKSZ_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
      - backup:/var/lib/backup

  redis:
    image: redis
    restart: always
    container_name: redis

  app:
    build: ./app
    restart: always
    container_name: nextcloud-app
    volumes:
      - nextcloud:/var/www/html
    environment:
      - MYSQL_HOST=mariadb
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    depends_on:
      - mariadb
      - redis
      - letsencrypt

  web:
    build: ./web
    restart: always
    container_name: nextcloud-web
    expose:
      - 443
    volumes:
      - nextcloud:/var/www/html:ro
    depends_on:
      - app
    environment:
      - VIRTUAL_HOST=${OC_DOMAIN}
      - LETSENCRYPT_HOST=${OC_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
      - LETSENCRYPT_TEST=false

  cron:
    build: ./app
    restart: always
    container_name: nextcloud-cron
    volumes:
      - nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - mariadb
      - redis
      
  sbfspot:
    build: ./sbfspot
    restart: always
    container_name: sbfspotdaemon
    volumes:
      - sbfspot:/var/log/sbfspot
    depends_on:
      - mariadb
      
  volkszaehler:
    image: ***REMOVED***/volkszaehler
    container_name: volkszaehler
    restart: always
    ports:
      - "8073:8080"
    depends_on:
      - mariadb
    environment:
      - VIRTUAL_HOST=${VZ_DOMAIN}
      - LETSENCRYPT_HOST=${VZ_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
      - LETSENCRYPT_TEST=false  

  sbfspotvzsync:
    build: ./sbfspotvzsync
    restart: always
    container_name: sbfspotvzsync
    depends_on:
      - mariadb
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-volume:/var/lib/grafana
    depends_on:
      - letsencrypt
    environment:
      - VIRTUAL_HOST=${GRAFANA_DOMAIN}
      - LETSENCRYPT_HOST=${GRAFANA_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@***REMOVED***.de
      - LETSENCRYPT_TEST=false
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=mail.***REMOVED***.de:587
      - GF_SMTP_USER=andreas@***REMOVED***.de
      - GF_SMTP_PASSWORD=sijqhHpwQA4ihV54
      - GF_SMTP_FROM_ADDRESS=admin@***REMOVED***.de
      - GF_SMTP_FROM_NAME=Admin
      - GF_SERVER_ROOT_URL=https://${GRAFANA_DOMAIN}

volumes:
  conf:
  vhost:
  html:
  certs:
  files:
  mysql:
  backup:
  redis:
  maildata:
  mailstate:
  nextcloud:
  sbfspot:
  grafana-volume:

# Do not forget to 'docker network create nginx-proxy' before launch, and to add '--network nginx-proxy' to proxied containers.
#networks:
#  default:
#    external:
#      name: nginx-proxy

